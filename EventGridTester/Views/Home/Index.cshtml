@model EventGridTester.Models.PublishEventViewModel
@using Azure.Messaging.EventGrid;
@using System.Text.Json;
@using System.Linq;

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>

<h1>Publish Event</h1>
<form asp-action="SendEvent" method="post"> 
   <div> 
      <label asp-for = "Json"></label> 
      <input asp-for = "Json" /> 
   </div> 
   
   <div> 
      <input type = "submit" value = "Publish" /> 
   </div> 
</form>

<hr />

<h1>Event History</h1>
<div id="eventHistory">
@foreach (var evt in (@ViewBag.EventHistory.ReceivedEvents as IEnumerable<EventGridEvent>).OrderByDescending(t => t.EventTime))
{
<div>
    <pre>@Html.Raw(JsonSerializer.Serialize(evt, new JsonSerializerOptions{WriteIndented = true}))</pre> 
    <hr />
</div>
}
</div>